Newsqueak2
'LangexplrExperiments'

class HCalendar usingLib: platform = NewspeakObject (
"Experiment for displaying a calendar en Hopscotch."
|
     Subject = platform Subject.
     Presenter = platform HPresenter.
     Date = platform Date.
     Month = platform Month.
|
)
(

class CalendarSubject = Subject (
"Test subject"
|
  public theMonth = Date today month.
  public theYear = Date today year.
|
)
('as yet unclassified'
createPresenter = (
	^CalendarPresenter new subject: self.
)

)

class CalendarPresenter = Presenter (
" Presenter."
|
|
)
('as yet unclassified'
definition = (
	^column: {
            label:: subject theMonth name, ' ' , subject theYear asString.
            weeks.
       }.
)

fragmentForDaysNotInCurrentMonth = (
	^label: '  '.
)

weekDayFragmentFor: dayNumber = (
	^label:: dayNumber asString.
)

weeks = (
	|firstDayOfMonth result t previousMonthDays nextMonthDays 
       weeksToShow lastday|
      firstDayOfMonth:: Date year: (subject theYear) 
                                        month: (subject theMonth name) 
                                        day: 1.
      previousMonthDays:: firstDayOfMonth dayOfWeek - 1.
      nextMonthDays:: 7 - ((((subject theMonth daysInMonth) + previousMonthDays)) rem: 7) .
      weeksToShow:: ((subject theMonth daysInMonth) + 
                                 previousMonthDays + nextMonthDays) / 7.

      result:: Array new: weeksToShow.
      result at: 1 
               put: (row: ( (1 to: 7) 
                                collect: [:d|  (d <= previousMonthDays)  
                                              ifTrue: [fragmentForDaysNotInCurrentMonth]
                                              ifFalse: [weekDayFragmentFor: (d - previousMonthDays) ] ]   )).
      lastday:: 7 - previousMonthDays.
      2 to: (weeksToShow - 1) 
         do: [:i | result at: i 
                             put: (row:((1 to: 7) collect: [:d|
                                                     lastday:: lastday+1.
                                                     (weekDayFragmentFor: lastday).
                                                     ]))].
      lastday::lastday - 1.
      result at: weeksToShow 
               put: (row: ( (1 to: 7) 
                                collect: [:d|  lastday:: lastday+1.
                                                   (d >= nextMonthDays)  
                                                      ifTrue: [fragmentForDaysNotInCurrentMonth]
                                                      ifFalse: [weekDayFragmentFor: lastday  ].
                                                   ]   )).
      ^column: result.
)

))